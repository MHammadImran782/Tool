<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Free online tool to compress and optimize your images. Reduce file size while maintaining quality for faster websites.">
    <meta name="keywords" content="image compressor, optimize images, reduce image size, webp converter, jpg optimizer, png compressor">
    <title>ImageCompressorPro | Free Online Image Optimization Tool</title>
    
    <!-- Preload important resources -->
    <link rel="preload" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" as="style" onload="this.onload=null;this.rel='stylesheet'">
    <noscript><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"></noscript>
    
    <style>
        :root {
            --primary: #4361ee;
            --primary-dark: #3a56d4;
            --secondary: #3f37c9;
            --accent: #4895ef;
            --light: #f8f9fa;
            --dark: #212529;
            --gray: #6c757d;
            --light-gray: #e9ecef;
            --success: #4cc9f0;
            --border-radius: 12px;
            --shadow-sm: 0 1px 3px rgba(0,0,0,0.12);
            --shadow-md: 0 4px 6px rgba(0,0,0,0.1);
            --shadow-lg: 0 10px 25px rgba(0,0,0,0.1);
            --transition: all 0.3s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;
            line-height: 1.6;
            color: var(--dark);
            background-color: var(--light);
            overflow-x: hidden;
        }

        /* Layout */
        .container {
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 1.5rem;
        }

        /* Typography */
        h1, h2, h3, h4 {
            line-height: 1.2;
            margin-bottom: 1rem;
            color: var(--dark);
        }

        h1 { font-size: 2.5rem; }
        h2 { font-size: 2rem; }
        h3 { font-size: 1.75rem; }
        h4 { font-size: 1.5rem; }

        p {
            margin-bottom: 1rem;
            color: var(--gray);
        }

        /* Buttons */
        .btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            padding: 0.75rem 1.5rem;
            border-radius: var(--border-radius);
            font-weight: 600;
            text-decoration: none;
            cursor: pointer;
            transition: var(--transition);
            border: none;
            gap: 0.5rem;
        }

        .btn-primary {
            background-color: var(--primary);
            color: white;
        }

        .btn-primary:hover {
            background-color: var(--primary-dark);
            transform: translateY(-2px);
            box-shadow: var(--shadow-md);
        }

        .btn-secondary {
            background-color: var(--light-gray);
            color: var(--dark);
        }

        .btn-secondary:hover {
            background-color: #dee2e6;
            transform: translateY(-2px);
            box-shadow: var(--shadow-sm);
        }

        .btn-lg {
            padding: 1rem 2rem;
            font-size: 1.1rem;
        }

        /* Header */
        header {
            background-color: white;
            box-shadow: var(--shadow-sm);
            position: sticky;
            top: 0;
            z-index: 100;
            padding: 1rem 0;
        }

        .header-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            text-decoration: none;
            font-weight: 700;
            font-size: 1.5rem;
            color: var(--primary);
        }

        .logo i {
            font-size: 1.8rem;
        }

        /* Navigation */
        nav ul {
            display: flex;
            list-style: none;
            gap: 1.5rem;
        }

        nav a {
            text-decoration: none;
            color: var(--dark);
            font-weight: 500;
            transition: var(--transition);
            padding: 0.5rem;
        }

        nav a:hover {
            color: var(--primary);
        }

        .mobile-menu-btn {
            display: none;
            background: none;
            border: none;
            font-size: 1.5rem;
            color: var(--dark);
            cursor: pointer;
        }

        /* Hero Section */
        .hero {
            text-align: center;
            padding: 4rem 0;
            background: linear-gradient(135deg, #f5f7fa 0%, #e4e8f0 100%);
            margin-bottom: 3rem;
            border-radius: 0 0 var(--border-radius) var(--border-radius);
        }

        .hero-content {
            max-width: 800px;
            margin: 0 auto;
        }

        /* Main Content */
        .tool-container {
            background-color: white;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow-lg);
            overflow: hidden;
            margin-bottom: 3rem;
        }

        /* Upload Area */
        .upload-area {
            padding: 3rem 2rem;
            border: 2px dashed var(--light-gray);
            border-radius: var(--border-radius);
            text-align: center;
            cursor: pointer;
            transition: var(--transition);
            margin: 2rem;
            position: relative;
        }

        .upload-area:hover {
            border-color: var(--primary);
            background-color: rgba(67, 97, 238, 0.05);
        }

        .upload-area i {
            font-size: 3.5rem;
            color: var(--primary);
            margin-bottom: 1.5rem;
        }

        .upload-area h3 {
            margin-bottom: 0.5rem;
        }

        #file-input {
            display: none;
        }

        /* Controls */
        .controls {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 2rem;
            padding: 0 2rem 2rem;
        }

        .control-group {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .slider-container {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .slider-container input[type="range"] {
            flex: 1;
            height: 8px;
            -webkit-appearance: none;
            background: var(--light-gray);
            border-radius: 4px;
            outline: none;
        }

        .slider-container input[type="range"]::-webkit-slider-thumb {
            -webkit-appearance: none;
            width: 20px;
            height: 20px;
            background: var(--primary);
            border-radius: 50%;
            cursor: pointer;
            transition: var(--transition);
        }

        .slider-container input[type="range"]::-webkit-slider-thumb:hover {
            transform: scale(1.1);
        }

        .slider-value {
            width: 60px;
            text-align: center;
            font-weight: 700;
            color: var(--dark);
            background: var(--light-gray);
            padding: 0.5rem;
            border-radius: var(--border-radius);
        }

        .format-options {
            display: flex;
            flex-wrap: wrap;
            gap: 1rem;
        }

        .format-option {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .format-option input[type="radio"] {
            appearance: none;
            width: 18px;
            height: 18px;
            border: 2px solid var(--light-gray);
            border-radius: 50%;
            transition: var(--transition);
            cursor: pointer;
            position: relative;
        }

        .format-option input[type="radio"]:checked {
            border-color: var(--primary);
        }

        .format-option input[type="radio"]:checked::after {
            content: '';
            position: absolute;
            top: 2px;
            left: 2px;
            width: 10px;
            height: 10px;
            background: var(--primary);
            border-radius: 50%;
        }

        /* Action Buttons */
        .action-buttons {
            display: flex;
            gap: 1rem;
            padding: 0 2rem 2rem;
            flex-wrap: wrap;
        }

        /* Preview Section */
        .preview-container {
            display: none;
            padding: 2rem;
            border-top: 1px solid var(--light-gray);
            background-color: #f8f9fa;
        }

        .preview-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid var(--light-gray);
        }

        .preview-content {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 2rem;
        }

        .image-preview {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .image-preview img {
            width: 100%;
            height: auto;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow-md);
            transition: var(--transition);
        }

        .image-preview img:hover {
            transform: scale(1.02);
            box-shadow: var(--shadow-lg);
        }

        .image-info {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .info-item {
            display: flex;
            justify-content: space-between;
            padding: 0.75rem 0;
            border-bottom: 1px solid var(--light-gray);
        }

        .info-label {
            font-weight: 600;
        }

        .info-value {
            color: var(--gray);
        }

        .savings {
            color: var(--success);
            font-weight: 700;
        }

        /* Ad Containers */
        .ad-container {
            margin: 3rem 0;
            text-align: center;
            background-color: white;
            padding: 1.5rem;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow-md);
        }

        .ad-label {
            font-size: 0.75rem;
            color: var(--gray);
            margin-bottom: 0.5rem;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        /* Info Section */
        .info-section {
            background-color: white;
            padding: 3rem 2rem;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow-md);
            margin-bottom: 3rem;
        }

        .info-section ul {
            list-style-position: inside;
            margin-bottom: 1.5rem;
        }

        .info-section li {
            margin-bottom: 0.5rem;
            color: var(--gray);
        }

        /* Footer */
        footer {
            background-color: var(--dark);
            color: white;
            padding: 3rem 0;
            margin-top: 3rem;
        }

        .footer-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 2rem;
        }

        .footer-links {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .footer-links h4 {
            color: white;
            margin-bottom: 1.5rem;
        }

        .footer-links a {
            color: rgba(255, 255, 255, 0.7);
            text-decoration: none;
            transition: var(--transition);
        }

        .footer-links a:hover {
            color: white;
            transform: translateX(5px);
        }

        .copyright {
            grid-column: 1 / -1;
            text-align: center;
            color: rgba(255, 255, 255, 0.5);
            font-size: 0.9rem;
            padding-top: 2rem;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            h1 { font-size: 2rem; }
            h2 { font-size: 1.75rem; }
            h3 { font-size: 1.5rem; }
            
            .header-container {
                flex-direction: column;
                align-items: flex-start;
                gap: 1rem;
            }
            
            nav {
                width: 100%;
                display: none;
            }
            
            nav.active {
                display: block;
            }
            
            nav ul {
                flex-direction: column;
                gap: 0.5rem;
                padding-top: 1rem;
            }
            
            .mobile-menu-btn {
                display: block;
                position: absolute;
                top: 1rem;
                right: 1.5rem;
            }
            
            .hero {
                padding: 3rem 0;
            }
            
            .upload-area {
                padding: 2rem 1rem;
                margin: 1rem;
            }
            
            .controls {
                grid-template-columns: 1fr;
                padding: 0 1rem 1rem;
            }
            
            .action-buttons {
                padding: 0 1rem 1rem;
            }
            
            .preview-container {
                padding: 1.5rem;
            }
        }

        /* Animations */
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .fade-in {
            animation: fadeIn 0.5s ease-out forwards;
        }

        /* Loading spinner */
        .spinner {
            display: none;
            width: 40px;
            height: 40px;
            margin: 0 auto;
            border: 4px solid rgba(0, 0, 0, 0.1);
            border-radius: 50%;
            border-top-color: var(--primary);
            animation: spin 1s ease-in-out infinite;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        /* Progress bar */
        .progress-container {
            width: 100%;
            height: 8px;
            background: var(--light-gray);
            border-radius: 4px;
            margin: 1rem 0;
            overflow: hidden;
            display: none;
        }

        .progress-bar {
            height: 100%;
            background: var(--primary);
            width: 0%;
            transition: width 0.3s ease;
        }
    </style>
</head>
<body>
    <header>
        <div class="container header-container">
            <a href="/" class="logo">
                <i class="fas fa-compress-alt"></i>
                <span>ImageCompressorPro</span>
            </a>
            
            <button class="mobile-menu-btn" id="mobile-menu-btn">
                <i class="fas fa-bars"></i>
            </button>
            
            <nav id="main-nav">
                <ul>
                    <li><a href="/">Home</a></li>
                    <li><a href="/features">Features</a></li>
                    <li><a href="/how-it-works">How It Works</a></li>
                    <li><a href="/blog">Blog</a></li>
                    <li><a href="/contact">Contact</a></li>
                </ul>
            </nav>
        </div>
    </header>
    
    <main class="container">
        <section class="hero">
            <div class="hero-content">
                <h1>Optimize Your Images in Seconds</h1>
                <p>Reduce image file size without sacrificing quality. Perfect for websites, social media, and storage optimization. Supports JPG, PNG, GIF, and WebP formats.</p>
            </div>
        </section>
        
        <!-- Top Ad Banner -->
        <div class="ad-container fade-in">
            <div class="ad-label">Advertisement</div>
            <!-- Replace with your AdSense code -->
            <div style="min-height: 90px; background: var(--light-gray); display: flex; align-items: center; justify-content: center;">
                <p>Ad Space (728x90)</p>
            </div>
        </div>
        
        <div class="tool-container">
            <div class="upload-area" id="upload-area">
                <i class="fas fa-cloud-upload-alt"></i>
                <h3>Drag & Drop Your Images Here</h3>
                <p>or click to browse files (Max: 10MB)</p>
                <input type="file" id="file-input" accept="image/*">
            </div>
            
            <div class="controls">
                <div class="control-group">
                    <h4><i class="fas fa-sliders-h"></i> Compression Level</h4>
                    <div class="slider-container">
                        <input type="range" id="quality-slider" min="0" max="100" value="80">
                        <span class="slider-value" id="quality-value">80%</span>
                    </div>
                    <div class="progress-container" id="progress-container">
                        <div class="progress-bar" id="progress-bar"></div>
                    </div>
                </div>
                
                <div class="control-group">
                    <h4><i class="fas fa-file-image"></i> Output Format</h4>
                    <div class="format-options">
                        <div class="format-option">
                            <input type="radio" id="format-original" name="format" value="original" checked>
                            <label for="format-original">Original</label>
                        </div>
                        <div class="format-option">
                            <input type="radio" id="format-jpg" name="format" value="jpg">
                            <label for="format-jpg">JPG</label>
                        </div>
                        <div class="format-option">
                            <input type="radio" id="format-png" name="format" value="png">
                            <label for="format-png">PNG</label>
                        </div>
                        <div class="format-option">
                            <input type="radio" id="format-webp" name="format" value="webp">
                            <label for="format-webp">WebP</label>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="action-buttons">
                <button class="btn btn-primary" id="compress-btn" disabled>
                    <i class="fas fa-compress-alt"></i> Compress Image
                </button>
                <button class="btn btn-secondary" id="reset-btn">
                    <i class="fas fa-redo"></i> Reset
                </button>
            </div>
            
            <div class="preview-container" id="preview-container">
                <div class="preview-header">
                    <h3><i class="fas fa-chart-bar"></i> Compression Results</h3>
                </div>
                
                <div class="preview-content">
                    <div class="image-preview">
                        <div class="spinner" id="spinner"></div>
                        <img id="preview-image" src="" alt="Compressed preview">
                    </div>
                    
                    <div class="image-info">
                        <div class="info-item">
                            <span class="info-label">Original Size:</span>
                            <span class="info-value" id="original-size">-</span>
                        </div>
                        <div class="info-item">
                            <span class="info-label">Compressed Size:</span>
                            <span class="info-value" id="compressed-size">-</span>
                        </div>
                        <div class="info-item">
                            <span class="info-label">Reduction:</span>
                            <span class="info-value savings" id="reduction">-</span>
                        </div>
                        <div class="info-item">
                            <span class="info-label">Format:</span>
                            <span class="info-value" id="format-info">-</span>
                        </div>
                        <div class="info-item">
                            <span class="info-label">Dimensions:</span>
                            <span class="info-value" id="dimensions">-</span>
                        </div>
                    </div>
                </div>
                
                <button class="btn btn-primary btn-lg download-btn" id="download-btn">
                    <i class="fas fa-download"></i> Download Compressed Image
                </button>
            </div>
        </div>
        
        <!-- Middle Ad Banner -->
        <div class="ad-container fade-in">
            <div class="ad-label">Advertisement</div>
            <!-- Replace with your AdSense code -->
            <div style="min-height: 250px; background: var(--light-gray); display: flex; align-items: center; justify-content: center;">
                <p>Ad Space (300x250)</p>
            </div>
        </div>
        
        <section class="info-section fade-in">
            <h2><i class="fas fa-cogs"></i> How Our Image Compressor Works</h2>
            <p>Our advanced algorithm analyzes your image and applies optimal compression techniques to reduce file size while maintaining visual quality. Perfect for:</p>
            <ul>
                <li>Website optimization</li>
                <li>Faster page loading</li>
                <li>Social media sharing</li>
                <li>Email attachments</li>
                <li>Storage optimization</li>
            </ul>
        </section>
        
        <!-- Bottom Ad Banner -->
        <div class="ad-container fade-in">
            <div class="ad-label">Advertisement</div>
            <!-- Replace with your AdSense code -->
            <div style="min-height: 90px; background: var(--light-gray); display: flex; align-items: center; justify-content: center;">
                <p>Ad Space (728x90)</p>
            </div>
        </div>
    </main>
    
    <footer>
        <div class="container footer-container">
            <div class="footer-links">
                <h4>Quick Links</h4>
                <a href="/">Home</a>
                <a href="/features">Features</a>
                <a href="/pricing">Pricing</a>
                <a href="/blog">Blog</a>
            </div>
            
            <div class="footer-links">
                <h4>Support</h4>
                <a href="/help">Help Center</a>
                <a href="/contact">Contact Us</a>
                <a href="/faq">FAQs</a>
                <a href="/feedback">Feedback</a>
            </div>
            
            <div class="footer-links">
                <h4>Legal</h4>
                <a href="/privacy">Privacy Policy</a>
                <a href="/terms">Terms of Service</a>
                <a href="/cookies">Cookie Policy</a>
                <a href="/dmca">DMCA</a>
            </div>
            
            <div class="copyright">
                &copy; <span id="current-year"></span> ImageCompressorPro. All rights reserved.
            </div>
        </div>
    </footer>
    
    <script>
        // Mobile menu toggle
        document.getElementById('mobile-menu-btn').addEventListener('click', function() {
            document.getElementById('main-nav').classList.toggle('active');
        });
        
        // Set current year in footer
        document.getElementById('current-year').textContent = new Date().getFullYear();
        
        // Quality slider value display
        const qualitySlider = document.getElementById('quality-slider');
        const qualityValue = document.getElementById('quality-value');
        
        qualitySlider.addEventListener('input', function() {
            qualityValue.textContent = this.value + '%';
        });
        
        // File upload handling
        const uploadArea = document.getElementById('upload-area');
        const fileInput = document.getElementById('file-input');
        const compressBtn = document.getElementById('compress-btn');
        const resetBtn = document.getElementById('reset-btn');
        const previewContainer = document.getElementById('preview-container');
        const downloadBtn = document.getElementById('download-btn');
        const spinner = document.getElementById('spinner');
        const progressContainer = document.getElementById('progress-container');
        const progressBar = document.getElementById('progress-bar');
        
        let originalFile = null;
        let compressedBlob = null;
        
        // Handle drag and drop
        uploadArea.addEventListener('dragover', (e) => {
            e.preventDefault();
            uploadArea.style.borderColor = 'var(--primary)';
            uploadArea.style.backgroundColor = 'rgba(67, 97, 238, 0.1)';
        });
        
        uploadArea.addEventListener('dragleave', () => {
            uploadArea.style.borderColor = 'var(--light-gray)';
            uploadArea.style.backgroundColor = 'transparent';
        });
        
        uploadArea.addEventListener('drop', (e) => {
            e.preventDefault();
            uploadArea.style.borderColor = 'var(--light-gray)';
            uploadArea.style.backgroundColor = 'transparent';
            
            if (e.dataTransfer.files.length) {
                handleFile(e.dataTransfer.files[0]);
            }
        });
        
        // Handle click to browse
        uploadArea.addEventListener('click', () => {
            fileInput.click();
        });
        
        fileInput.addEventListener('change', () => {
            if (fileInput.files.length) {
                handleFile(fileInput.files[0]);
            }
        });
        
        // Handle file selection
        function handleFile(file) {
            // Check if file is an image
            if (!file.type.match('image.*')) {
                showAlert('Please select an image file (JPG, PNG, GIF, etc.)', 'error');
                return;
            }
            
            // Check file size (10MB limit)
            if (file.size > 10 * 1024 * 1024) {
                showAlert('File size exceeds 10MB limit. Please choose a smaller image.', 'error');
                return;
            }
            
            originalFile = file;
            compressBtn.disabled = false;
            
            // Display original file info
            document.getElementById('original-size').textContent = formatFileSize(file.size);
            document.getElementById('format-info').textContent = file.type.split('/')[1].toUpperCase();
            
            // Show preview of original image
            const reader = new FileReader();
            reader.onload = function(e) {
                const img = new Image();
                img.onload = function() {
                    document.getElementById('dimensions').textContent = `${img.width} × ${img.height} px`;
                    document.getElementById('preview-image').src = e.target.result;
                };
                img.src = e.target.result;
            };
            reader.readAsDataURL(file);
        }
        
        // Compress image
        compressBtn.addEventListener('click', async function() {
            if (!originalFile) return;
            
            const quality = parseInt(qualitySlider.value) / 100;
            const format = document.querySelector('input[name="format"]:checked').value;
            
            // Show loading state
            compressBtn.disabled = true;
            compressBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Compressing...';
            spinner.style.display = 'block';
            progressContainer.style.display = 'block';
            previewContainer.style.display = 'block';
            
            try {
                // Simulate progress for better UX
                simulateProgress();
                
                // Compress the image
                compressedBlob = await compressImage(originalFile, quality, format);
                
                // Display compressed file info
                document.getElementById('compressed-size').textContent = formatFileSize(compressedBlob.size);
                
                const reduction = ((originalFile.size - compressedBlob.size) / originalFile.size * 100).toFixed(1);
                document.getElementById('reduction').textContent = `${reduction}% smaller`;
                
                // Update preview
                const reader = new FileReader();
                reader.onload = function(e) {
                    document.getElementById('preview-image').src = e.target.result;
                };
                reader.readAsDataURL(compressedBlob);
                
                // Show download button
                downloadBtn.style.display = 'block';
                
                // Scroll to preview
                previewContainer.scrollIntoView({ behavior: 'smooth' });
                
                // Show success message
                showAlert('Image compressed successfully!', 'success');
            } catch (error) {
                console.error('Compression error:', error);
                showAlert('An error occurred during compression. Please try again.', 'error');
            } finally {
                // Reset loading state
                compressBtn.disabled = false;
                compressBtn.innerHTML = '<i class="fas fa-compress-alt"></i> Compress Image';
                spinner.style.display = 'none';
                progressContainer.style.display = 'none';
                progressBar.style.width = '0%';
            }
        });
        
        // Simulate progress for better UX
        function simulateProgress() {
            let progress = 0;
            const interval = setInterval(() => {
                progress += Math.random() * 10;
                if (progress >= 100) {
                    progress = 100;
                    clearInterval(interval);
                }
                progressBar.style.width = `${progress}%`;
            }, 200);
        }
        
        // Reset everything
        resetBtn.addEventListener('click', function() {
            originalFile = null;
            compressedBlob = null;
            fileInput.value = '';
            compressBtn.disabled = true;
            previewContainer.style.display = 'none';
            downloadBtn.style.display = 'none';
            qualitySlider.value = 80;
            qualityValue.textContent = '80%';
            document.getElementById('format-original').checked = true;
            
            // Reset info display
            document.getElementById('original-size').textContent = '-';
            document.getElementById('compressed-size').textContent = '-';
            document.getElementById('reduction').textContent = '-';
            document.getElementById('format-info').textContent = '-';
            document.getElementById('dimensions').textContent = '-';
            document.getElementById('preview-image').src = '';
            
            // Reset button text
            compressBtn.innerHTML = '<i class="fas fa-compress-alt"></i> Compress Image';
        });
        
        // Download compressed image
        downloadBtn.addEventListener('click', function() {
            if (!compressedBlob) return;
            
            const url = URL.createObjectURL(compressedBlob);
            const a = document.createElement('a');
            a.href = url;
            
            // Determine file extension
            let extension = originalFile.name.split('.').pop().toLowerCase();
            const format = document.querySelector('input[name="format"]:checked').value;
            
            if (format !== 'original') {
                extension = format;
            }
            
            a.download = `compressed_${originalFile.name.split('.')[0]}.${extension}`;
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            URL.revokeObjectURL(url);
        });
        
        // Image compression function
        function compressImage(file, quality, format) {
            return new Promise((resolve, reject) => {
                const reader = new FileReader();
                reader.onload = function(event) {
                    const img = new Image();
                    img.onload = function() {
                        const canvas = document.createElement('canvas');
                        const ctx = canvas.getContext('2d');
                        
                        // Maintain original dimensions
                        canvas.width = img.width;
                        canvas.height = img.height;
                        
                        // Draw image on canvas
                        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);
                        
                        // Determine output format
                        let mimeType = file.type;
                        if (format !== 'original') {
                            mimeType = `image/${format}`;
                        }
                        
                        // Convert to blob with specified quality
                        canvas.toBlob(blob => {
                            if (!blob) {
                                reject(new Error('Canvas toBlob failed'));
                                return;
                            }
                            resolve(blob);
                        }, mimeType, quality);
                    };
                    
                    img.onerror = reject;
                    img.src = event.target.result;
                };
                reader.onerror = reject;
                reader.readAsDataURL(file);
            });
        }
        
        // Format file size for display
        function formatFileSize(bytes) {
            if (bytes === 0) return '0 Bytes';
            
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }
        
        // Show alert message
        function showAlert(message, type) {
            const alert = document.createElement('div');
            alert.className = `alert alert-${type}`;
            alert.textContent = message;
            alert.style.position = 'fixed';
            alert.style.bottom = '20px';
            alert.style.right = '20px';
            alert.style.padding = '1rem 1.5rem';
            alert.style.backgroundColor = type === 'error' ? '#f8d7da' : '#d1e7dd';
            alert.style.color = type === 'error' ? '#842029' : '#0f5132';
            alert.style.borderRadius = 'var(--border-radius)';
            alert.style.boxShadow = 'var(--shadow-md)';
            alert.style.zIndex = '1000';
            alert.style.animation = 'fadeIn 0.3s ease-out';
            document.body.appendChild(alert);
            
            setTimeout(() => {
                alert.style.animation = 'fadeOut 0.3s ease-out';
                setTimeout(() => {
                    document.body.removeChild(alert);
                }, 300);
            }, 3000);
        }
        
        // Add fadeOut animation
        const style = document.createElement('style');
        style.textContent = `
            @keyframes fadeOut {
                from { opacity: 1; transform: translateY(0); }
                to { opacity: 0; transform: translateY(20px); }
            }
        `;
        document.head.appendChild(style);
    </script>
</body>
</html>
